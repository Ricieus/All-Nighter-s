<div class="content">
  <div class="container-fluid">
    <div class="row">
      <%- include ("../partials/sectionMenuAdministrateur.ejs") %>
        <div class="col-lg-8 content-area" id="adminVoiture"> <!--  -->
          <div class="card">
            <div class="product-list-form">
              <h3 class="m-3">Informations de la voiture</h3>
              <div class="container">

                <div class="row">
                  <div class="col-md-6">
                    <div class="form-group">
                      <label for="idProduit">Id :</label>
                      <input type="text" class="form-control" name="id" autocomplete="off" id="idProduit"
                        onkeypress="return AllowOnlyNumbers(event);" placeholder="Id de la voiture" disabled />
                      <div class="text-danger" id="textDejaPris"></div>
                    </div>
                    <div class="form-group">
                      <label for="marqueProduit">Marque :</label>
                      <input type="text" class="form-control" id="marqueProduit" placeholder="Marque de la voiture"
                        name="marque" disabled>
                    </div>
                    <div class="form-group">
                      <label for="modeleProduit">Modèle :</label>
                      <input type="text" class="form-control" id="modeleProduit" name="modele"
                        placeholder="Modèle de la voiture" disabled>
                    </div>
                    <div class="form-group">
                      <label for="voitureAnnee">Année :</label>
                      <select class="form-control" id="voitureAnnee" name="annee" disabled>
                        <option value="" disabled selected>Choisir l'année</option>
                        <option value="2024">2024</option>
                        <option value="2023">2023</option>
                        <option value="2022">2022</option>
                        <option value="2021">2021</option>
                        <option value="2020">2020</option>
                        <option value="2019">2019</option>
                        <option value="2018">2018</option>
                      </select>
                      <div class="text-danger" id="voitureAnneeText"></div>
                    </div>
                    <div class="form-group">
                      <label for="voiturePrix">Prix :</label>
                      <input type="text" class="form-control" name="prix" autocomplete="off" id="voiturePrix"
                        onkeypress="return AllowOnlyNumbers(event);" placeholder="Prix de la voiture" maxlength="8"
                        disabled />
                      <div class="text-danger" id="voiturePrixText"></div>
                    </div>
                    <div class="form-group">
                      <label for="productDescription">Description :</label>
                      <textarea class="form-control" id="productDescription" placeholder="Description de la voiture"
                        style="height: 7rem;" disabled></textarea>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="image-box">
                      <div class="form-group">
                        <label for="typeCarosserie">Type de carrosserie :</label>
                        <select class="form-control" id="typeCarosserie" name="typeCarosserie" disabled>
                          <option value="" selected disabled>Choisir le type de carrosserie</option>
                          <option value="Sedan">Sedan</option>
                          <option value="Hatchback">Hatchback</option>
                          <option value="SUV">SUV</option>
                          <option value="Coupé">Coupé</option>
                          <option value="Convertible">Convertible</option>
                          <option value="Wagon">Wagon</option>
                          <option value="Van">Van</option>
                        </select>
                      </div>

                      <div class="form-group">
                        <label for="typeGaz">Type de carburant :</label>
                        <select class="form-control" id="typeGaz" name="typeGaz" disabled>
                          <option value="" selected disabled>Choisir le type de carburant</option>
                          <option value="Gaz">Gaz</option>
                          <option value="Électrique">Électrique</option>
                          <option value="Hybride">Hybride</option>
                        </select>
                      </div>
                      <div class="form-group">
                        <label for="typeTraction">Type de traction :</label>
                        <select class="form-control" id="typeTraction" name="typeTraction" disabled>
                          <option value="" selected disabled>Choisir le type de traction</option>
                          <option value="AWD">AWD</option>
                          <option value="FWD">FWD</option>
                          <option value="RWD">RWD</option>
                          <option value="2WD">2WD</option>
                          <option value="4WD">4WD</option>
                        </select>
                      </div>
                      <div class="form-group" style="display:block;">
                        <label for="nombreCylindre">Nombre de cylindre :</label>
                        <select class="form-control" id="nbrCylindre" name="nbrCylindre" disabled>
                          <option value="" selected disabled>Choisir le nombre de cylindres</option>
                          <option value="N/A">N/A</option>
                          <option value="2 cylindres">2 cylindres</option>
                          <option value="4 cylindres">4 cylindres</option>
                          <option value="6 cylindres">6 cylindres</option>
                          <option value="8 cylindres">8 cylindres</option>
                          <option value="10 cylindres">10 cylindres</option>
                          <option value="12 cylindres">12 cylindres</option>
                        </select>
                      </div>


                      <div class="form-group">
                        <label for="typeConduit">Type de transmission :</label>
                        <select class="form-control" id="typeConduit" name="typeConduit" disabled>
                          <option value="" selected disabled>Choisir le type de transmission</option>
                          <option value="Automatique">Automatique</option>
                          <option value="Manuelle">Manuelle</option>
                        </select>
                      </div>
                      <h3>Images</h3>
                      <div class="image-preview" id="imagePreview">
                        <img class="mr-2" id="img">
                        <img class="mr-2" id="img1">
                        <img class="mr-2" id="img2">
                        <img class="mr-2" id="img3">
                      </div>
                      <div class="form-group">
                        <label class="custom-file-upload">
                          <input type="file" class="form-control-file" id="productImage" accept="image/*" multiple
                            style="display: none;" onchange="AfficherImagesSelectionner(this)" disabled>
                          Ajouter une image
                        </label>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="row mb-3">


                  <div class="col">
                    <button class="btn btn-primary" id="btn-effectuerAjout" style="display: none; width: auto;"
                      onclick="RedirectAjouter()">Ajouter</button>
                    <button class="btn btn-primary" id="btn-modifier" style="display: none; width: auto;"
                      onclick="RedirectModifier()">Modifier</button>
                    <div class="text-danger" id="erreurSurvenue"></div>
                    <div class="text-success" id="succes"></div>
                  </div>

                  <div class="col">
                    <button class="btn btn-primary" id="btn-ajouter" style="display: block; width: auto; float: right;"
                      onclick="Ajouter()">
                      Ajouter une voiture</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="card mt-2">
            <h3 class="m-3">Les voitures</h3>
            <div class="container">
              <table class="table">
                <thead>
                  <tr>
                    <th scope="col">Marque</th>
                    <th scope="col">Modèle</th>
                    <th scope="col">Prix ($)</th>
                    <th scope="col">Année</th>
                  </tr>
                </thead>
                <% for (let i=0; i < items.length; i++) { %>
                  <tr data-id="<%= items[i].id_voiture %>">
                    <td>
                      <%= items[i].marque %>
                    </td>
                    <td>
                      <%= items[i].modele %>
                    </td>
                    <td>
                      <%= items[i].prix %>
                    </td>
                    <td>
                      <%= items[i].annee %>
                    </td>
                    <td>
                      <button class="btn btn-warning modifier"><i class="bi bi-pencil-fill"></i>
                        Modifier</button>
                      <button class="btn btn-danger btn-supprimer"><i class="bi bi-trash3-fill"></i>
                        Supprimer</button>
                    </td>
                  </tr>

                  <% } %>

              </table>
            </div>
          </div>
          <input type="hidden" id="imagesExistante">

        </div>
    </div>
  </div>
</div>


<script>
  async function RedirectAjouter() {
    const id = document.getElementById("idProduit").value;
    const marque = document.getElementById("marqueProduit").value;
    const modele = document.getElementById("modeleProduit").value;
    const prix = document.getElementById("voiturePrix").value;
    const annee = document.getElementById("voitureAnnee").value;
    const productDescription = document.getElementById('productDescription').value;
    const typeCarosserie = document.getElementById('typeCarosserie').value;
    const typeGaz = document.getElementById('typeGaz').value;
    const typeTraction = document.getElementById('typeTraction').value;
    const nbrCylindre = document.getElementById('nbrCylindre').value;
    const typeConduit = document.getElementById('typeConduit').value;
    const imageInput = document.getElementById("productImage");
    const productImages = Array.from(imageInput.files).map(file => file.name);


    let idExiste = await CheckSiIdExiste();

    if (VerificationChampsRemplis(idExiste)) {
      BloquerTousLesChamps();
      CompteARebours(3, "Enregistrement...", document.getElementById('succes'));

      fetch('/ajoutVoiture', {
        method: 'POST',
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          id: id,
          marque: marque,
          modele: modele,
          prix: prix,
          annee: annee,
          productDescription: productDescription,
          typeCarosserie: typeCarosserie,
          typeGaz: typeGaz,
          typeTraction: typeTraction,
          nbrCylindre: nbrCylindre,
          typeConduit: typeConduit,
          image: productImages
        })
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Erreur lors de l\'ajout du produit');
          }
          return response.json();
        })
        .then(data => {
          document.getElementById("idProduit").value = data[0];
        })
        .catch(error => {
          console.error('Erreur lors de l\'ajout du produit : ', error);
        });
    }
  }

  function CompteARebours(temps, message, place) {
    let compteur = temps;

    const intervalID = setInterval(function () {
      place.innerText = message + " " + compteur + "..";
      compteur--;
      if (compteur < 0) {
        clearInterval(intervalID);
        place.innerText = "";
        location.reload();
      }
    }, 1000);
  }

  function VerificationChampsRemplis(idExiste) {
    const id = document.getElementById("idProduit").value;
    const marque = document.getElementById("marqueProduit").value;
    const modele = document.getElementById("modeleProduit").value;
    const prix = document.getElementById("voiturePrix").value;
    const annee = document.getElementById("voitureAnnee").value;
    const productDescription = document.getElementById('productDescription').value;
    const typeCarosserie = document.getElementById('typeCarosserie').value;
    const typeGaz = document.getElementById('typeGaz').value;
    const typeTraction = document.getElementById('typeTraction').value;
    const nbrCylindre = document.getElementById('nbrCylindre').value;
    const typeConduit = document.getElementById('typeConduit').value;
    const productImage = document.getElementById('productImage').value;
    let erreurSurvenue = document.getElementById('erreurSurvenue');
    let prixText = document.getElementById("voiturePrixText");
    let anneeText = document.getElementById("voitureAnneeText");
    let textDejaPris = document.getElementById('textDejaPris');

    let continuer = true;
    let message = "";
    prixText.innerText = "";
    anneeText.innerText = "";
    textDejaPris.innerText = "";
    erreurSurvenue.innerText = message;
    if (!id) {
      continuer = false;
      message += "le id, "
    }

    if (!marque) {
      continuer = false;
      message += "la marque, "
    }
    if (!modele) {
      continuer = false;
      message += "le modèle, "
    }
    if (!prix) {
      continuer = false;
      message += "le prix, "
    }
    if (!annee) {
      continuer = false;
      message += "l'année, "
    }
    if (!productDescription) {
      continuer = false;
      message += "la description, "
    }
    if (!typeCarosserie) {
      continuer = false;
      message += "le type de carrosserie, "
    }
    if (!typeGaz) {
      continuer = false;
      message += "le type de gaz, "
    }
    if (!typeTraction) {
      continuer = false;
      message += "le type de moteur, "
    }
    if (!nbrCylindre) {
      continuer = false;
      message += "le nombre de cylindre, "
    }
    if (!typeConduit) {
      continuer = false;
      message += "le type de conduit, "
    }
    if (!productImage) {
      continuer = false;
      message += "les quatre images, "
    }

    if (isNaN(parseInt(prix))) {
      prixText.innerText = "Le prix doit être un nombre.";
      continuer = false;
    }

    if (isNaN(parseInt(annee))) {
      anneeText.innerText = "L'année doit être un nombre.";
      continuer = false;
    }

    if (continuer && idExiste) {
      textDejaPris.innerText = "Le id est déjà pris.";
      return false;
    } else if (continuer) {
      return true;
    } else {
      message = message.trim().slice(0, -1);
      erreurSurvenue.innerText = "Vous avez oublié de mettre : " + message + ".";
      return false;
    }
  }

  async function CheckSiIdExiste() {
    const id = document.getElementById("idProduit").value;
    let idExiste = false;

    try {
      const response = await fetch('/getCarId/' + id, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (!response.ok) {
        throw new Error('Erreur lors de la récupération du id de la voiture');
      }

      const data = await response.json();

      if (data.length > 0) {
        idExiste = true;
      }
    } catch (error) {
      console.error('Erreur lors de la récupération des détails de la voiture:', error);
    }

    return idExiste;
  }


  async function RedirectModifier() {
    const id = document.getElementById("idProduit").value;
    const marque = document.getElementById("marqueProduit").value;
    const modele = document.getElementById("modeleProduit").value;
    const prix = document.getElementById("voiturePrix").value;
    const annee = document.getElementById("voitureAnnee").value;
    const productImageInput = document.getElementById('productImage');

    const existingImages = document.getElementById("imagesExistante").value.split(',');

    const newImages = Array.from(productImageInput.files).map(file => file.name);

    const firstImage = newImages.length > 0 ? newImages[0] : existingImages[0];

    CompteARebours(3, "Enregistrement...", document.getElementById('succes'));

    try {
      const response = await fetch(`/updateProduct/${id}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ marque, modele, prix, annee, firstImage })
      });

      if (!response.ok) {
        throw new Error('Erreur lors de la mise à jour du produit');
      }

      const data = await response.json();
      console.log("Mise à jour effectuée avec succès dans MySQL");
      UpdateProductMongo();
    } catch (error) {
      console.error('Erreur lors de la mise à jour du produit dans MySQL:', error);
    }
  }




  function getCarDetailsFromMongo(id) {
    fetch('/getCarDetails/' + id, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Erreur lors de la récupération des détails de la voiture');
        }
        return response.json();
      })
      .then(data => {
        console.log(data);
        const typeCarosserie = document.getElementById('typeCarosserie');
        typeCarosserie.disabled = false;
        typeCarosserie.value = data.corps;
        if (!typeCarosserie.value) {
          const newOption = document.createElement('option');
          newOption.value = data.corps;
          newOption.text = data.corps;
          typeCarosserie.add(newOption, typeCarosserie[1]);
          typeCarosserie.value = data.corps;
        }
        const typeGaz = document.getElementById('typeGaz');
        typeGaz.disabled = false;
        typeGaz.value = data.carburant;
        if (!typeGaz.value) {
          const newOption = document.createElement('option');
          newOption.value = data.carburant;
          newOption.text = data.carburant;
          typeGaz.add(newOption, typeGaz[1]);
          typeGaz.value = data.carburant;
        }
        const nbrCylindre = document.getElementById('nbrCylindre');
        nbrCylindre.disabled = false;
        nbrCylindre.value = data.moteur;
        if (!nbrCylindre.value) {
          const newOption = document.createElement('option');
          newOption.value = data.moteur;
          newOption.text = data.moteur;
          nbrCylindre.add(newOption, nbrCylindre[1]);
          nbrCylindre.value = data.moteur;
        }

        document.getElementById('typeTraction').value = data.pneus_bougent;
        document.getElementById('productDescription').value = data.description;
        document.getElementById('typeConduit').value = data.transmission;

        document.getElementById('imagesExistante').value = data.images.join(',');

        document.getElementById('img').src = "/images/" + data.images[0];
        document.getElementById('img1').src = "/images/" + data.images[1];
        document.getElementById('img2').src = "/images/" + data.images[2];
        document.getElementById('img3').src = "/images/" + data.images[3];
      })
      .catch(error => {
        console.error('Erreur lors de la récupération des détails de la voiture:', error);
      });
  }

  function UpdateProductMongo() {
    const id = document.getElementById("idProduit").value;
    const typeCarosserie = document.getElementById("typeCarosserie").value;
    const typeGaz = document.getElementById("typeGaz").value;
    const typeTraction = document.getElementById("typeTraction").value;
    const productDescription = document.getElementById("productDescription").value;
    const nbrCylindre = document.getElementById("nbrCylindre").value;
    const typeConduit = document.getElementById("typeConduit").value;
    const productImageInput = document.getElementById('productImage');

    const existingImages = document.getElementById("imagesExistante").value.split(',');

    const newImages = Array.from(productImageInput.files).map(file => file.name);

    const productImages = newImages.length > 0 ? newImages : existingImages;

    const updateData = {
      typeCarosserie,
      typeGaz,
      typeTraction,
      productDescription,
      nbrCylindre,
      typeConduit,
      productImages
    };

    fetch('/updateVoitureMongo/' + id, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(updateData)
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Erreur lors de la mise à jour des détails de la voiture dans MongoDB');
        }
        return response.json();
      })
      .then(data => {
        console.log("Mise à jour effectuée avec succès dans MongoDB");
      })
      .catch(error => {
        console.error('Erreur lors de la mise à jour des détails de la voiture dans MongoDB:', error);
      });
  }

  function Ajouter() {
    document.documentElement.scrollTop = 0;
    document.getElementById('btn-ajouter').style.display = "none";
    document.getElementById("btn-modifier").style.display = "none";
    AfficherTousLesChamps();
    ReinitialiserTousLesChamps();
    document.getElementById('btn-effectuerAjout').style.display = "block";
  }


  function ReinitialiserTousLesChamps() {
    document.getElementById('idProduit').value = null;
    document.getElementById('marqueProduit').value = null;
    document.getElementById('modeleProduit').value = null;
    document.getElementById('voitureAnnee').value = "";
    document.getElementById('voiturePrix').value = null;
    document.getElementById('productDescription').value = null;
    document.getElementById('typeCarosserie').value = "";
    document.getElementById('typeGaz').value = "";
    document.getElementById('typeTraction').value = "";
    document.getElementById('nbrCylindre').value = "";
    document.getElementById('typeConduit').value = "";
    document.getElementById('productImage').value = null;
    document.getElementById('img').src = '';
    document.getElementById('img1').src = '';
    document.getElementById('img2').src = '';
    document.getElementById('img3').src = '';
    document.getElementById('erreurSurvenue').innerText = "";
    document.getElementById('textDejaPris').innerText = "";
    document.getElementById("voiturePrixText").innerText = "";
    document.getElementById("voitureAnneeText").innerText = "";
  }

  function AfficherTousLesChamps() {
    document.getElementById('idProduit').disabled = false;
    document.getElementById('marqueProduit').disabled = false;
    document.getElementById('modeleProduit').disabled = false;
    document.getElementById('voitureAnnee').disabled = false;
    document.getElementById('voiturePrix').disabled = false;
    document.getElementById('productDescription').disabled = false;
    document.getElementById('typeCarosserie').disabled = false;
    document.getElementById('typeGaz').disabled = false;
    document.getElementById('typeTraction').disabled = false;
    document.getElementById('nbrCylindre').disabled = false;
    document.getElementById('typeConduit').disabled = false;
    document.getElementById('productImage').disabled = false;
  }

  function BloquerTousLesChamps() {
    document.getElementById('idProduit').disabled = true;
    document.getElementById('marqueProduit').disabled = true;
    document.getElementById('modeleProduit').disabled = true;
    document.getElementById('voitureAnnee').disabled = true;
    document.getElementById('voiturePrix').disabled = true;
    document.getElementById('productDescription').disabled = true;
    document.getElementById('typeCarosserie').disabled = true;
    document.getElementById('typeGaz').disabled = true;
    document.getElementById('typeTraction').disabled = true;
    document.getElementById('nbrCylindre').disabled = true;
    document.getElementById('typeConduit').disabled = true;
    document.getElementById('productImage').disabled = true;
  }




  function ActivationBoutonAjouter() {
    var submitBtn = document.getElementById('btn-effectuerAjout');
    var marqueProduit = document.getElementById('marqueProduit').value;
    var modeleProduit = document.getElementById('modeleProduit').value;
    var voiturePrix = document.getElementById('voiturePrix').value;
    var productDescription = document.getElementById('productDescription').value;
    var productImage = document.getElementById('productImage').files;

    if (marqueProduit && modeleProduit && voiturePrix && productDescription && productImage.length === 4) {
      submitBtn.disabled = false;
    } else {
      submitBtn.disabled = true;
    }
  }


  //Source: Aidé par chatgpt
  function AfficherImagesSelectionner(input) {
    var preview = document.getElementById('imagePreview');
    var files = input.files;

    preview.innerHTML = '';

    for (var i = 0; i < files.length; i++) {
      var file = files[i];
      var reader = new FileReader();

      reader.onload = function (e) {
        var img = document.createElement('img');
        img.src = e.target.result;
        img.classList.add('mr-2', 'mb-2');
        preview.appendChild(img);

        ActivationBoutonAjouter();
      }

      reader.readAsDataURL(file);
    }
  }


  function remplirFormulaire(id, marque, modele, prix, annee) {
    document.getElementById('idProduit').value = id;
    document.getElementById('marqueProduit').value = marque;
    document.getElementById('modeleProduit').value = modele;
    document.getElementById('voiturePrix').value = prix;
    const voitureAnneeDropdown = document.getElementById('voitureAnnee');
    voitureAnneeDropdown.disabled = false;
    voitureAnneeDropdown.value = annee;
    if (!voitureAnneeDropdown.value) {
      const newOption = document.createElement('option');
      newOption.value = annee;
      newOption.text = annee;
      voitureAnneeDropdown.add(newOption, voitureAnneeDropdown[1]);
      voitureAnneeDropdown.value = annee;
    }
  }



  document.querySelectorAll('.modifier').forEach(function (button) {
    button.addEventListener('click', function (event) {
      document.documentElement.scrollTop = 0;
      ReinitialiserTousLesChamps();
      event.preventDefault();
      var row = this.closest('tr');
      var id = row.getAttribute('data-id');
      var marque = row.cells[0].textContent.trim();
      var modele = row.cells[1].textContent.trim();
      var prix = row.cells[2].textContent.trim();
      var annee = row.cells[3].textContent.trim();
      remplirFormulaire(id, marque, modele, prix, annee);
      getCarDetailsFromMongo(id);
      document.getElementById('idProduit').disabled = true;
      document.getElementById("btn-modifier").style.display = "block";
      document.getElementById("btn-ajouter").style.display = "block";
      document.getElementById("btn-effectuerAjout").style.display = "none";
      AfficherTousLesChamps();
      document.getElementById('idProduit').disabled = true;

    });
  });


  document.querySelectorAll('.btn-supprimer').forEach(function (button) {
    button.addEventListener('click', function (event) {
      event.preventDefault();
      var row = this.closest('tr');
      var id = row.getAttribute('data-id');
      supprimerVoiture(id);
    });
  });

  function supprimerVoiture(id) {
    fetch('/delete_voiture/' + id, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(res => {
        if (res.ok) {
          location.reload();
        }
      })
      .catch(err => {
        console.error("Erreur de suppression : " + err);
      });
  }


  //source : https://stackoverflow.com/questions/13952686/how-to-make-html-input-tag-only-accept-numerical-values#:~:text=You%20can%20use%20an%20%3Cinput%20type%3D%22number%22%20%2F%3E.%20This,type%3D%22number%22%20tag%20is%20only%20supported%20in%20newer%20browsers
  function AllowOnlyNumbers(e) {
    e = (e) ? e : window.event;

    var clipboardData = e.clipboardData ? e.clipboardData : window.clipboardData;
    var key = e.keyCode ? e.keyCode : e.which ? e.which : e.charCode;
    var str = (e.type && e.type == "paste") ? clipboardData.getData('Text') : String.fromCharCode(key);

    return (/^\d+$/.test(str));
  }
</script>