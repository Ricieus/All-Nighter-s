<style>
    .card-wrapper {
        display: flex;
    }

    .card-carousel {
        cursor: pointer;
        margin: 2%;
        box-shadow: 1px 3px 4px 0 rgba(22, 22, 26, 0.18);
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        height: 5vh;
        width: 5vh;
        border-radius: 50%;
    }

    .carousel-control-prev-icon {
        background-image: url("../images/arrow-left.svg");
    }

    .carousel-control-next-icon {
        background-image: url("../images/arrow-right.svg");
    }
</style>
<div class="container">
    <div id="carouselExample" class="carousel slide">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <div class="card-wrapper">
                    <% for (let i=0; i < 5; i++) { %>

                        <%- include ('../partials/petitCarouselVoiture.ejs', { voiture: items[i] }) %>

                            <% } %>
                </div>
            </div>
            <div class="carousel-item">
                <div class="card-wrapper">
                    <% for (let i=5; i < 10; i++) { %>

                        <%- include ('../partials/petitCarouselVoiture.ejs', { voiture: items[i] }) %>

                            <% } %>
                </div>
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Fonction pour récupérer les données depuis le serveur
        function getData(url, selectId) {
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    data.forEach(function (item) {
                        var option = document.createElement('option');
                        option.value = item;
                        option.textContent = item;
                        document.getElementById(selectId).appendChild(option);
                    });
                    // Rafraîchir le selectpicker une fois les options ajoutées
                    var selectpicker = document.getElementById(selectId);
                    if (selectpicker.classList.contains('selectpicker')) {
                        $(`#${selectId}`).selectpicker('refresh');
                    }
                })
                .catch(error => console.error('Erreur lors de la récupération des données :', error));
        }

        // Charger les marques depuis la base de données
        getData('/get_marques', 'marque');

        // Écouter les changements de sélection de la marque
        document.getElementById('marque').addEventListener('change', function () {
            var marque = this.value;
            if (marque) {
                // Effacer complètement les anciennes options de modèle
                var modeleSelect = document.getElementById('modele');
                modeleSelect.enabled = true;
                modeleSelect.innerHTML = '';


                // Charger les modèles de la marque sélectionnée depuis la base de données
                getData(`/get_modeles?marque=${marque}`, 'modele');
            } else {
                var modeleSelect = document.getElementById('modele');
            }
        });
        // Charger les prix depuis la base de données
        getData('/get_prix', 'prix');

        function enableSelect(currentSelectId, prochainSelectID) {
            document.getElementById(currentSelectId).addEventListener('change', function () {
                let currentValue = this.value;
                let prochainSelect = document.getElementById(prochainSelectID);

                prochainSelect.disabled = !currentValue;

                prochainSelect.value = '';

                if (!prochainSelect.disabled) {
                    var previousSelectValue = document.getElementById(currentSelectId).value;
                    getData(`/get_${prochainSelectID}?${currentSelectId}=${previousSelectValue}`, prochainSelectID);
                }
            });
        }
        enableSelect('marque', 'modele');
    });
</script>