<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
    }

    .content {
        padding-top: 15vh;
        align-items: center;
        justify-content: center;
    }

    .card-container {
        width: 90vh;
        height: 90vh;
        margin: auto;
    }

    .btn-group {
        display: flex;
        justify-content: center;
        margin-top: 5%;
    }

    .btn-primary {
        width: 30%;
        margin: 0 5%;
    }

    .containerInscription {
        height: 50vh;
    }


    /* Style pour les messages d'erreur */
    .error-message {
        color: red;
        font-size: 12px;
        margin-top: 5px;
        display: none;
        /* Les messages d'erreur sont cachés par défaut */
    }

    .error-border {
        border: 2px solid red;
    }
</style>


<div class="content">
    <div class="card rounded-5 shadow-sm mb-5 bg-body rounded card-container">
        <div class="d-flex align-items-center justify-content-center btn-group" data-toggle="buttons">
            <a href="/pages/inscription" class="btn btn-primary mt-3 disabled">S'inscrire</a>
            <a href="/pages/connexion" class="btn btn-primary mt-3">Connexion</a>
        </div>
        <div class="container" id="inscrire">
            <form action="/inscription/submit_inscription" method="post" id="inscriptionForm">
                <div class="ligne-formulaire">
                    <h1 style="text-align: center;">Merci de vous inscrire!</h1>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="groupe-formulaire">
                                <label for="prenom">Prénom</label>
                                <input type="text" class="form-control" id="prenom" placeholder="Prénom" name="prenom">
                                <div id="prenomError" class="error-message"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="groupe-formulaire">
                                <label for="nom">Nom</label>
                                <input type="text" class="form-control" id="nom" placeholder="Nom" name="nom">
                                <div id="nomError" class="error-message"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="groupe-formulaire">
                    <label for="courriel">Courriel</label>
                    <input type="email" class="form-control" id="courriel1" placeholder="Courriel" name="courriel">
                    <div id="courrielError" class="error-message"></div>
                </div>
                <div class="groupe-formulaire">
                    <label for="telephone">Téléphone</label>
                    <input type="tel" class="form-control" id="telephone" placeholder="Téléphone" maxlength="10"
                        name="telephone">
                    <div id="telephoneError" class="error-message"></div>
                </div>
                <div class="groupe-formulaire">
                    <label for="adresse">Adresse</label>
                    <input type="text" class="form-control" id="adresse" placeholder="Adresse" name="adresse">
                    <div id="adresseError" class="error-message"></div>
                </div>
                <div class="groupe-formulaire">
                    <label for="motdepasse">Mot de passe</label>
                    <input type="password" class="form-control" id="motdepasse" placeholder="Mot de passe"
                        name="motdepasse">
                    <div id="motdepasseError" class="error-message"></div>
                </div>
                <div class="groupe-formulaire">
                    <label for="confirmerMotPasse">Confirmer votre mot de passe</label>
                    <input type="password" class="form-control" id="confirmerMotPasse"
                        placeholder="Confirmer votre mot de passe" name="confirmerMotPasse">
                    <div id="confirmerMotPasseError" class="error-message"></div>
                </div>
                <div class="mt-2">
                    <button type="submit" class="btn btn-primary">S'inscrire</button>
                </div>
            </form>
            <p class="mt-5 text-success" id="texteSucces"></p>
            <p id="userFullName" style="position: fixed; top: 10px; right: 10px;"></p>
            <p id="userNom"></p>
            <p id="userPrenom"></p>
            <p id="userCourriel"></p>
            <p id="userTelephone"></p>
            <p id="userAdresse"></p>
            <p id="userMotDePasse"></p>
        </div>
    </div>
</div>



<script>
    document.getElementById('inscriptionForm').addEventListener('submit', async function (event) {
        event.preventDefault(); // Empêcher la soumission par défaut du formulaire

        // Récupérer les valeurs des champs
        const prenom = document.getElementById('prenom').value;
        const nom = document.getElementById('nom').value;
        const courriel = document.getElementById('courriel1');
        const telephone = document.getElementById('telephone');
        const adresse = document.getElementById('adresse');
        const motdepasse = document.getElementById('motdepasse');
        const confirmerMotPasse = document.getElementById('confirmerMotPasse');

        // Réinitialiser les messages d'erreur et les bordures
        document.querySelectorAll('.error-message').forEach(function (element) {
            element.style.display = 'none';
        });
        document.querySelectorAll('.form-control').forEach(function (element) {
            element.classList.remove('error-border');
        });

        // Vérifier la validation
        let isValid = true;

        if (!prenom) {
            document.getElementById('prenomError').innerText = 'Prénom est requis';
            document.getElementById('prenomError').style.display = 'block';
            document.getElementById('prenom').classList.add('error-border');
            isValid = false;
        }

        if (!nom) {
            document.getElementById('nomError').innerText = 'Nom de Famille est requis';
            document.getElementById('nomError').style.display = 'block';
            document.getElementById('nom').classList.add('error-border');
            isValid = false;
        }

        if (!courriel.value || !validateEmail(courriel.value)) {
            document.getElementById('courrielError').innerText = 'Courriel invalide';
            document.getElementById('courrielError').style.display = 'block';
            courriel.classList.add('error-border');
            isValid = false;
        }

        const numeroTelephone = telephone.value.replace(/\D/g, '');

        if (!numeroTelephone || numeroTelephone.length !== 10) {
            document.getElementById('telephoneError').innerText = 'Numéro invalide';
            document.getElementById('telephoneError').style.display = 'block';
            telephone.classList.add('error-border');
            isValid = false;
        }

        if (!adresse.value) {
            document.getElementById('adresseError').innerText = 'Adresse est requise';
            document.getElementById('adresseError').style.display = 'block';
            adresse.classList.add('error-border');
            isValid = false;
        }

        if (!motdepasse.value || motdepasse.value.length < 8) {
            document.getElementById('motdepasseError').innerText = 'Le mot de passe doit contenir au moins 8 caractères';
            document.getElementById('motdepasseError').style.display = 'block';
            motdepasse.classList.add('error-border');
            isValid = false;
        }

        if (!confirmerMotPasse.value || confirmerMotPasse.value !== motdepasse.value) {
            document.getElementById('confirmerMotPasseError').innerText = 'Les mots de passe ne correspondent pas';
            document.getElementById('confirmerMotPasseError').style.display = 'block';
            confirmerMotPasse.classList.add('error-border');
            isValid = false;
        }

        // Soumettre le formulaire si la validation est réussie
        if (isValid) {
            // Vérifier si l'email existe déjà
            const emailExists = await checkEmailExists(courriel.value);
            if (emailExists) {
                document.getElementById('courrielError').innerText = 'Cet email est déjà utilisé. Veuillez en choisir un autre.';
                document.getElementById('courrielError').style.display = 'block';
                courriel.classList.add('error-border');
            } else {
                this.submit();
                document.getElementById('userFullName').innerText = prenom + " " + nom;
                // Après une connexion réussie
                sessionStorage.setItem('userFullName', prenom + " " + nom);
                sessionStorage.setItem('userNom', nom);
                sessionStorage.setItem('userPrenom', prenom);
                sessionStorage.setItem('userCourriel', courriel.value);
                sessionStorage.setItem('userTelephone', telephone.value);
                sessionStorage.setItem('userAdresse', adresse.value);
                sessionStorage.setItem('userMotDePasse', motdepasse.value);
                gestionDeconnexion(); // Activer le bouton de déconnexion
            }
        }
    });

    // Fonction pour valider un courriel
    function validateEmail(email) {
        const re = /\S+@\S+\.\S+/;
        return re.test(email);
    }

    // Fonction pour vérifier si l'email existe déjà
    // AIDE AVEC CHATGPT et https://stackoverflow.com/questions/3038901/how-to-get-the-response-of-xmlhttprequest
    async function checkEmailExists(email) {
        return new Promise((resolve, reject) => {
            const xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        const response = JSON.parse(xhr.responseText);
                        resolve(response.exists);
                    } else {
                        reject(xhr.statusText);
                    }
                }
            };
            xhr.open('POST', '/checkEmailExists');
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(JSON.stringify({ email: email }));
        });
    }

</script>